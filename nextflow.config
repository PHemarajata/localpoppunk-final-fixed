/*
 * nextflow.config  – local Docker execution
 * Optimized for GCP VM: 64 CPUs · 412 GB RAM
 */

process {
  executor      = 'local'
  cpus          = 20
  memory        = '60 GB'
  errorStrategy = 'finish'
}

/* ---------  workflow-level parameters  --------- */
params {
  /* path to directory containing FASTA assemblies (.fasta) */
  input        = '/home/phemarajata/Downloads/bp_finalset'

  /* where all results are written */
  resultsDir   = '/home/phemarajata/Downloads/bp_finalset/results'

  /* resource knobs used inside the pipeline - SEGFAULT PREVENTION */
  threads      = 16        // REDUCED: High thread counts cause segfaults in PopPUNK 2.7.5
  ram          = '200 GB'  // Use about half your RAM for PopPUNK processes
  
  /* Chunked processing parameters for large datasets (BUS ERROR PREVENTION) */
  threads_per_chunk = 6    // Conservative threading per chunk to prevent bus errors
  memory_per_chunk  = '24 GB'  // Memory per chunk - allows multiple chunks to run in parallel

  /* Mash settings for the pre-clustering step - OPTIMIZED FOR BETTER CLUSTERING */
  mash_k       = 21
  mash_s       = 1000
  mash_thresh  = 0.001     // 0.005 ~ 99.5% ANI (much more stringent for better separation)
  
  /* Subsampling control - NEW PARAMETER */
  use_all_samples = false  // Set to true to use all samples for PopPUNK modeling instead of subsampling
  
  /* PopPUNK 2.7.x specific settings - BUS ERROR PREVENTION */
  poppunk_stable       = false    // DISABLED: --stable core causes segfaults with large datasets
  poppunk_reciprocal   = true     // Use --reciprocal-only for better lineage fitting
  poppunk_max_search   = 15       // REDUCED: prevent bus errors during model fitting
  poppunk_count_unique = true     // --count-unique-distances for better accuracy
  
  /* Additional PopPUNK model optimization - CONSERVATIVE FOR STABILITY */
  poppunk_model_dir    = 'poppunk_model'  // Model directory name
  poppunk_K            = 2        // REDUCED: fewer mixture components to prevent bus errors
  poppunk_model_threads = 8       // MAX threads for model fitting to prevent bus errors
  
  /* PopPUNK QC settings for poppunk_assign --run-qc */
  poppunk_max_zero_dist = 1       // --max-zero-dist: max zero distances allowed
  poppunk_max_merge     = 3       // --max-merge: max merge operations
  poppunk_length_sigma  = 2       // --length-sigma: outlying genome length detection
  poppunk_retain_failures = false // --retain-failures: keep failed QC samples in output
}

/* -------------  container runtime -------------- */
docker {
  enabled    = true        // run every process in its declared Docker image
  runOptions = ''          // add custom flags here if needed
}

singularity.enabled = false   // ensure Singularity isn’t used

/* -------------  execution profiles ------------- */
profiles {
  local {
    process {
      executor      = 'local'
      cpus          = 20        // Use 20 cores out of 22 to leave some for system
      memory        = '56 GB'   // Use 56 GB out of 64 GB to leave some for system
      errorStrategy = 'finish'
      
      // Optimize chunked processing for your hardware
      withName: 'POPPUNK_ASSIGN_CHUNK' {
        cpus = 4              // Conservative per-chunk to allow parallel chunks
        memory = '16 GB'      // Allow up to 3-4 chunks to run simultaneously
        maxForks = 3          // Limit parallel chunks to prevent resource contention
      }
      
      withName: 'POPPUNK_MODEL' {
        cpus = 12             // REDUCED: Conservative cores for model building to prevent bus errors
        memory = '48 GB'      // Use most RAM for model building
        time = '8h'           // Increased time limit for conservative processing
      }
    }
    
    params {
      threads      = 12        // Conservative thread count for PopPUNK stability
      ram          = '32 GB'   // Use about half your RAM for PopPUNK processes
      threads_per_chunk = 4    // Optimized for your 22-core system
      memory_per_chunk  = '16 GB'  // Allows 3-4 chunks to run in parallel
    }
  }
}

/* -------------  reporting / visualisation ------ */
report.enabled   = true   // HTML run report
timeline.enabled = true   // Gantt chart
dag.enabled      = true   // DAG PNG

